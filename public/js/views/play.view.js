// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tracker.Views.Play = (function(_super) {
    __extends(Play, _super);

    function Play() {
      return Play.__super__.constructor.apply(this, arguments);
    }

    Play.prototype.name = "play";

    Play.prototype.template = $("#tpl-play").html();

    Play.prototype.events = {
      "click .keyboard>.tile": "numberkey",
      "click .correction": "correction"
    };

    Play.prototype.className = "page";

    Play.prototype.initialize = function() {
      return _.bindAll(this, 'render', 'numberkey', 'correction');
    };

    Play.prototype.numberkey = function(e) {
      var number;
      if (!this.resultDiv) {
        this.resultDiv = $('.result');
      }
      if (!this.userInput) {
        this.userInput = new String;
      } else {
        this.userInput = this.resultDiv.text();
      }
      number = $(e.currentTarget).text();
      this.resultDiv.text(this.userInput + parseInt(number));
      return this.userInput = this.userInput + parseInt(number);
    };

    Play.prototype.correction = function(e) {
      var result;
      this.userResult = parseInt(this.userInput);
      console.log(this.userResult);
      result = this.first * this.second;
      if (this.userResult !== result) {
        return alert("error");
      } else {
        return alert("ok");
      }
    };

    Play.prototype.render = function() {
      var json, output;
      this.first = Math.floor(Math.random() * 10) + 1;
      this.second = Math.floor(Math.random() * 10) + 1;
      json = {
        "first": this.first,
        "second": this.second,
        "next": false
      };
      output = Mustache.to_html(this.template, json);
      this.$el.html(output);
      return this;
    };

    return Play;

  })(Tracker.Views.Page);

}).call(this);
